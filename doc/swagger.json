{
    "openapi": "3.0.3",
    "info": {
        "title": "RFID-API-Documentation",
        "version": "1",
        "description": "OpenAPI for RFID ",
        "termsOfService": "https://rfidsolutions.id/",
        "contact": {
            "name": "RFID-Solution",
            "email": "info@logikapratama.com",
            "url": "https://rfidsolutions.id/"
        },
        "license": {
            "name": "APACHE 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "servers": [
        {
            "description": "RFID Solution API Public-Server",
            "url": "http://151.106.112.34/"
        },
        {
            "description": "RFID Solution API Local-Server",
            "url": "localhost:8080"
        }
    ],
    "paths": {
        "/api/v1/item/all": {
            "get": {
                "tags": [
                    "Master item"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "get all master item data from database",
                "responses": {
                    "200": {
                        "description": "success get all items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/messages"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/api/v1/item": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Master item"
                ],
                "summary": "get all items by ID",
                "responses": {
                    "200": {
                        "description": "success get all items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/messages"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            },
            "post": {
                "tags": [
                    "Master item"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "add data to database master item",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/api/v1/itemnull": {
            "get": {
                "tags": [
                    "Master item"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get all items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/messages"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/api/v1/item/{id}": {
            "delete": {
                "tags": [
                    "Master item"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                
                "description": "delete item from database",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            },
            "get": {
                "tags": [
                    "Master item"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/tag"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get all items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/messages"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/api/v1/item/{item_id}": {
            "put": {
                "tags": [
                    "Master item"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Update Master Item in database",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/item_id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/api/v1/item/search/{tag}": {
            "get": {
                "tags": [
                    "Master item"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/tag"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get all items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/messages"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "item_id": {
                "name": "item_id",
                "in": "path",
                "required": true,
                "description": "item id for updated",
                "schema": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 10
                },
                "example": "zplikshs"
            },
            "id": {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 10
                },
                "example": "zasypk"
            },
            "tag": {
                "name": "tag",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 20
                },
                "example": "112223344556600AB"
            }
        },
        "responses": {
            "200": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/successResponse"
                        }
                    }
                }
            },
            "401": {
                "description": "Authentication information is misssing or invalid",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UnauthorizedError"
                        }
                    }
                }
            },
            "400": {
                "description": "Invalid input",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InvailidInput"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "UnauthorizedError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "example": {
                    "message": "Unauthorize"
                }
            },
            "successResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "example": {
                    "status": "success",
                    "message": "success message from server"
                }
            },
            "InvailidInput": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "example": {
                    "status": "error",
                    "message": "message error"
                }
            },
            "messages": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "properties": {
                            "value": {
                                "type": "object"
                            }
                        }
                    }
                },
                "required": [
                    "message"
                ],
                "example": {
                    "status": "success",
                    "message": "success messages from server ",
                    "data": "[{}]"
                }
            },
            "items": {
                "type": "object",
                "properties": {
                    "Item_code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 10,
                        "required": false
                    },
                    "Item_category": {
                        "type": "string",
                        "required": false
                    },
                    "Item_Type": {
                        "type": "string",
                        "required": false
                    },
                    "SKU": {
                        "type": "string",
                        "required": true,
                        "maxLength": 50
                    },
                    "Name": {
                        "type": "string",
                        "required": false
                    },
                    "Description": {
                        "type": "string",
                        "required": false
                    },
                    "Uom": {
                        "type": "string",
                        "required": false
                    },
                    "Quantity": {
                        "type": "number",
                        "required": true,
                        "maxLength": 10
                    },
                    "tag_number": {
                        "required": true,
                        "type": "string",
                        "maxLength": 100
                    },
                    "Ref_Number": {
                        "required": true,
                        "type": "string"
                    }
                }
            },
            "arrayItems": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/items"
                }
            }
        }
    }
}